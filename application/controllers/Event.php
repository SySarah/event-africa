<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Event extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Event_model');
    } 

    /*
     * Listing of events
     */
    function index()
    {
        $data['events'] = $this->Event_model->get_all_events();
        
        $data['_view'] = 'event/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new event
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('state','State','required');
		$this->form_validation->set_rules('nom_event','Nom Event','required');
		$this->form_validation->set_rules('description_event','Description Event','required');
		$this->form_validation->set_rules('categorie_event','Categorie Event','required');
		$this->form_validation->set_rules('date_eventdebut','Date Eventdebut','required');
		$this->form_validation->set_rules('heure_eventdebut','Heure Eventdebut','required');
		$this->form_validation->set_rules('date_eventfin','Date Eventfin','required');
		$this->form_validation->set_rules('heure_eventfin','Heure Eventfin','required');
		$this->form_validation->set_rules('prix_participation','Prix Participation','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'state' => $this->input->post('state'),
				'id_lieu' => $this->input->post('id_lieu'),
				'id_sponsor' => $this->input->post('id_sponsor'),
				'nom_event' => $this->input->post('nom_event'),
				'description_event' => $this->input->post('description_event'),
				'categorie_event' => $this->input->post('categorie_event'),
				'date_eventdebut' => $this->input->post('date_eventdebut'),
				'heure_eventdebut' => $this->input->post('heure_eventdebut'),
				'date_eventfin' => $this->input->post('date_eventfin'),
				'heure_eventfin' => $this->input->post('heure_eventfin'),
				'prix_participation' => $this->input->post('prix_participation'),
				'createAt' => $this->input->post('createAt'),
            );
            
            $event_id = $this->Event_model->add_event($params);
            redirect('event/index');
        }
        else
        {
			$this->load->model('Lieux_model');
			$data['all_lieux'] = $this->Lieux_model->get_all_lieux();

			$this->load->model('Sponsor_model');
			$data['all_sponsors'] = $this->Sponsor_model->get_all_sponsors();
            
            $data['_view'] = 'event/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a event
     */
    function edit($id_event)
    {   
        // check if the event exists before trying to edit it
        $data['event'] = $this->Event_model->get_event($id_event);
        
        if(isset($data['event']['id_event']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('state','State','required');
			$this->form_validation->set_rules('nom_event','Nom Event','required');
			$this->form_validation->set_rules('description_event','Description Event','required');
			$this->form_validation->set_rules('categorie_event','Categorie Event','required');
			$this->form_validation->set_rules('date_eventdebut','Date Eventdebut','required');
			$this->form_validation->set_rules('heure_eventdebut','Heure Eventdebut','required');
			$this->form_validation->set_rules('date_eventfin','Date Eventfin','required');
			$this->form_validation->set_rules('heure_eventfin','Heure Eventfin','required');
			$this->form_validation->set_rules('prix_participation','Prix Participation','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'state' => $this->input->post('state'),
					'id_lieu' => $this->input->post('id_lieu'),
					'id_sponsor' => $this->input->post('id_sponsor'),
					'nom_event' => $this->input->post('nom_event'),
					'description_event' => $this->input->post('description_event'),
					'categorie_event' => $this->input->post('categorie_event'),
					'date_eventdebut' => $this->input->post('date_eventdebut'),
					'heure_eventdebut' => $this->input->post('heure_eventdebut'),
					'date_eventfin' => $this->input->post('date_eventfin'),
					'heure_eventfin' => $this->input->post('heure_eventfin'),
					'prix_participation' => $this->input->post('prix_participation'),
					'createAt' => $this->input->post('createAt'),
                );

                $this->Event_model->update_event($id_event,$params);            
                redirect('event/index');
            }
            else
            {
				$this->load->model('Lieux_model');
				$data['all_lieux'] = $this->Lieux_model->get_all_lieux();

				$this->load->model('Sponsor_model');
				$data['all_sponsors'] = $this->Sponsor_model->get_all_sponsors();

                $data['_view'] = 'event/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The event you are trying to edit does not exist.');
    } 

    /*
     * Deleting event
     */
    function remove($id_event)
    {
        $event = $this->Event_model->get_event($id_event);

        // check if the event exists before trying to delete it
        if(isset($event['id_event']))
        {
            $this->Event_model->delete_event($id_event);
            redirect('event/index');
        }
        else
            show_error('The event you are trying to delete does not exist.');
    }
    
}
